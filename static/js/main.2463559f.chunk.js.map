{"version":3,"sources":["utils/utils.js","utils/api.js","components/Header.js","components/Card.js","contexts/CurrentUserContext.js","components/Main.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup .js","components/App.js","serviceWorker.js","index.js","images/close.svg","images/logo.svg"],"names":["optionsApi","baseUrl","headers","authorization","api","options","this","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","newName","newJob","method","body","JSON","stringify","name","about","result","place","url","link","id","owner","_id","avatarUrl","avatar","Header","className","src","logo","alt","Card","card","onCardClick","onCardLike","onCardDelete","isOwn","isLiked","likes","some","i","LikeButtonClassName","style","backgroundImage","onClick","e","stopPropagation","window","confirm","handleDeleteClick","length","CurrentUserContext","React","createContext","Main","props","useContext","onEditAvatar","onEditProfile","onAddPlace","cards","slice","map","index","key","children","ImagePopup","isOpen","onClose","cls","close","PopupWithForm","title","button","onSubmit","loading","buttonDescription","disabled","type","EditProfilePopup","useState","setName","description","setDescription","nameError","setNameError","descriptionError","setDescriptionError","currentUser","useEffect","preventDefault","onUpdateUser","value","placeholder","required","onChange","event","target","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setPlace","setUrl","onUpdatePlace","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoading","closeAllPopups","getUserInfo","data","getInitialCards","reverse","Provider","deleteLike","newCard","newCards","c","addLike","deleteCardFromServer","filter","el","setTimeout","addNewCard","newDescription","editProfile","newAvatar","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.2463559f.chunk.js","sourcesContent":["// const serverUrl =\r\n//   NODE_ENV === \"production\"\r\n//     ? \"https://nomoreparties.co/cohort7\"\r\n//     : \"http://nomoreparties.co/cohort7\";\r\n\r\nconst serverUrl = \"https://nomoreparties.co/cohort7\";\r\nexport const optionsApi = {\r\n  baseUrl: serverUrl,\r\n  headers: {\r\n    authorization: \"4d8a3a8e-7975-4987-a6e2-1615458dac98\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n","import { optionsApi } from \"./utils\";\r\n\r\nexport default class Api {\r\n  constructor(options) {\r\n    this.options = options;\r\n  }\r\n  getUserInfo() {\r\n    return (\r\n      fetch(this.options.baseUrl + \"/users/me\", {\r\n        headers: this.options.headers,\r\n      })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n        // .then((data) => {})\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    );\r\n  }\r\n  getInitialCards() {\r\n    return fetch(this.options.baseUrl + \"/cards\", {\r\n      headers: this.options.headers,\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  editProfile(newName, newJob) {\r\n    return fetch(this.options.baseUrl + \"/users/me\", {\r\n      method: \"PATCH\",\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        name: newName,\r\n        about: newJob,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // .finally(() => buttonLoad(false, popupButtonSave, \"Сохранить\"));\r\n  }\r\n  addNewCard(place, url) {\r\n    return fetch(this.options.baseUrl + \"/cards\", {\r\n      method: \"POST\",\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        name: place,\r\n        link: url,\r\n      }),\r\n    })\r\n      .then((result) => {\r\n        if (result.ok) {\r\n          return result.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${result.status}`);\r\n      })\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // .finally(() => buttonLoad(false, popupButtonAdd, \"+\"));\r\n  }\r\n  addLike(id) {\r\n    return fetch(this.options.baseUrl + `/cards/like/${id}`, {\r\n      method: \"PUT\",\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        owner: {\r\n          _id: \"033a1b11aedbbdef4a2f8447\",\r\n        },\r\n      }),\r\n    })\r\n      .then((result) => {\r\n        if (result.ok) {\r\n          return result.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${result.status}`);\r\n      })\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  deleteLike(id) {\r\n    return fetch(this.options.baseUrl + `/cards/like/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        owner: {\r\n          _id: \"033a1b11aedbbdef4a2f8447\",\r\n        },\r\n      }),\r\n    })\r\n      .then((result) => {\r\n        if (result.ok) {\r\n          return result.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${result.status}`);\r\n      })\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  deleteCardFromServer(id) {\r\n    return fetch(this.options.baseUrl + `/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        owner: {\r\n          _id: \"033a1b11aedbbdef4a2f8447\",\r\n        },\r\n      }),\r\n    })\r\n      .then((result) => {\r\n        if (result.ok) {\r\n          return result.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${result.status}`);\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  newAvatar(avatarUrl) {\r\n    return (\r\n      fetch(this.options.baseUrl + \"/users/me/avatar\", {\r\n        method: \"PATCH\",\r\n        headers: this.options.headers,\r\n        body: JSON.stringify({\r\n          avatar: avatarUrl,\r\n        }),\r\n      })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n        // .then((res) => {\r\n        //   userAvatar.style.backgroundImage = `url(${res.avatar})`;\r\n        // })\r\n        .catch((err) => console.log(err))\r\n    );\r\n    // .finally(() => buttonLoad(false, avatarButton, \"Сохранить\"));\r\n  }\r\n}\r\n\r\nexport const api = new Api(optionsApi);\r\n","import React from 'react';\r\nimport logo from '../images/logo.svg'\r\nexport const  Header = () => {\r\n  return (\r\n    <>\r\n      <header className=\"header root__section\">\r\n          <img src={logo} alt=\"mesto logo\" className=\"logo\"/>\r\n      </header>\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\n\r\nfunction Card({ card, onCardClick, id, onCardLike, onCardDelete }) {\r\n  const isOwn = card.owner._id === id;\r\n  const isLiked = card.likes.some((i) => i._id === id);\r\n\r\n  const LikeButtonClassName = `${\r\n    isLiked\r\n      ? \"place-card__like-icon place-card__like-icon_liked\"\r\n      : \"place-card__like-icon\"\r\n  }`;\r\n\r\n  function handleLikeClick() {\r\n    return onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick(e) {\r\n    e.stopPropagation();\r\n    if (window.confirm(\"Вы действительно хотите удалить карточку?\")) {\r\n      return onCardDelete(card);\r\n    }\r\n  }\r\n\r\n  function handleCardClick() {\r\n    return onCardClick(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"place-card\">\r\n      <div\r\n        className=\"place-card__image\"\r\n        style={{ backgroundImage: `url(${card.link})` }}\r\n        onClick={handleCardClick}\r\n      >\r\n        {isOwn ? (\r\n          <button\r\n            className={\"place-card__delete-icon\"}\r\n            onClick={(e) => handleDeleteClick(e)}\r\n          ></button>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"place-card__description\">\r\n        <h3 className=\"place-card__name\">{card.name}</h3>\r\n        <div className=\"place-card__container\">\r\n          <button\r\n            className={LikeButtonClassName}\r\n            // onClick={onCardLike.bind(null, card)}\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <span className=\"place-card__like-count\">{card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nexport const Main = (props) => {\r\n  // данные пользователя из контекста\r\n  const { name, about, avatar, _id } = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile root__section\">\r\n        <div className=\"user-info\">\r\n          <div\r\n            className=\"user-info__photo\"\r\n            style={{ backgroundImage: `url(${avatar})` }}\r\n            onClick={props.onEditAvatar}\r\n          ></div>\r\n          <div className=\"user-info__data\">\r\n            <h1 className=\"user-info__name\">{name}</h1>\r\n            <p className=\"user-info__job\">{about}</p>\r\n            <button\r\n              onClick={props.onEditProfile}\r\n              className=\"button user-info__edit-button\"\r\n            >\r\n              Edit\r\n            </button>\r\n          </div>\r\n          <button\r\n            onClick={props.onAddPlace}\r\n            className=\"button user-info__button\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"places-list root__section\">\r\n        {props.cards.slice(0, 10).map((card, index) => {\r\n          return (\r\n            <Card\r\n              card={card}\r\n              key={index}\r\n              onCardClick={props.onCardClick}\r\n              id={_id}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n          );\r\n        })}\r\n        {props.children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport close from \"../images/close.svg\";\r\n\r\nconst ImagePopup = ({ card, isOpen, onClose }) => {\r\n  const cls = isOpen ? \"popup_is-opened\" : \"\";\r\n\r\n  return (\r\n    <div className={`popup popup_image ${cls}`}>\r\n      <div className=\"popup__image-container\">\r\n        <img src={card.link} alt=\"\" className=\"popup__src-image\" />\r\n        <img\r\n          src={close}\r\n          alt=\"\"\r\n          className=\"popup__close popup__image-close\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePopup;\r\n","import React from \"react\";\r\nimport close from \"../images/close.svg\";\r\n\r\nfunction PopupWithForm({\r\n  isOpen,\r\n  title,\r\n  name,\r\n  children,\r\n  button,\r\n  onClose,\r\n  onSubmit,\r\n  loading,\r\n}) {\r\n  const cls = isOpen ? \"popup_is-opened\" : \"\";\r\n  const buttonDescription = loading ? \"Загрузка...\" : button;\r\n\r\n  return (\r\n    <div className={`popup ${name} ${cls}`}>\r\n      <div className=\"popup__content\">\r\n        <img src={close} alt=\"\" className=\"popup__close\" onClick={onClose} />\r\n        <h3 className=\"popup__title\">{title}</h3>\r\n        <form className=\"popup__form\" name={name} onSubmit={onSubmit}>\r\n          {children}\r\n          <button\r\n            disabled={loading ? true : false}\r\n            type=\"submit\"\r\n            className=\"button popup__button popup__button_add\"\r\n          >\r\n            {buttonDescription}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport PopupWithForm from \"../components/PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [nameError, setNameError] = useState(false);\r\n  const [descriptionError, setDescriptionError] = useState(false);\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(event) {\r\n    event.target.value.length === 0 ? setNameError(true) : setNameError(false);\r\n    setName(event.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(event) {\r\n    event.target.value.length === 0\r\n      ? setDescriptionError(true)\r\n      : setDescriptionError(false);\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateUser(name, description);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={\"popup__user-info\"}\r\n      title={\"Редактировать профиль\"}\r\n      button={\"Сохранить\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      loading={props.loading}\r\n    >\r\n      <input\r\n        value={name}\r\n        type=\"text\"\r\n        name=\"userName\"\r\n        className=\"popup__input popup__input_type_user-name\"\r\n        placeholder=\"Имя\"\r\n        required\r\n        onChange={handleChangeName}\r\n      />\r\n      {nameError ? (\r\n        <p className=\"popup__name-error\">Поле не может быть пустым</p>\r\n      ) : null}\r\n\r\n      <input\r\n        value={description}\r\n        type=\"text\"\r\n        name=\"userJob\"\r\n        className=\"popup__input popup__input_type_user-job\"\r\n        placeholder=\"О себе\"\r\n        required\r\n        onChange={handleChangeDescription}\r\n      />\r\n      {descriptionError ? (\r\n        <p className=\"popup__job-error\">Поле не может быть пустым</p>\r\n      ) : null}\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React, { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const inputRef = useRef(null);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar(inputRef.current.value);\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      name={\"popup__avatar\"}\r\n      title={\"Обновить аватар\"}\r\n      button={\"Сохранить\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      loading={props.loading}\r\n    >\r\n      <input\r\n        ref={inputRef}\r\n        type=\"url\"\r\n        name=\"userAvatar\"\r\n        className=\"popup__input popup__input_type_avatar\"\r\n        placeholder=\"Ссылка на аватар\"\r\n        required\r\n      />\r\n      <p className=\"popup__name-error\"></p>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [place, setPlace] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdatePlace(place, url);\r\n  }\r\n\r\n  function handleChangePlace(e) {\r\n    setPlace(e.target.value);\r\n  }\r\n  function handleChangeUrl(e) {\r\n    setUrl(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={\"popup-place\"}\r\n      title={\"Новое место\"}\r\n      button={\"+\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      loading={props.loading}\r\n    >\r\n      <input\r\n        value={place}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className=\"popup__input popup__input_type_name\"\r\n        placeholder=\"Название\"\r\n        required\r\n        onChange={handleChangePlace}\r\n      />\r\n      <input\r\n        value={url}\r\n        type=\"url\"\r\n        name=\"link\"\r\n        className=\"popup__input popup__input_type_link-url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n        onChange={handleChangeUrl}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/api\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup \";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // данные пользователя с свервера\n  useEffect(() => {\n    api.getUserInfo().then((data) => {\n      setCurrentUser(data);\n    });\n  }, []);\n\n  // карточки с сервера\n  useEffect(() => {\n    api.getInitialCards().then((data) => {\n      setCards(data.reverse());\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups(props) {\n    props(false);\n  }\n\n  function handleCardClick(card) {\n    setImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(newName, newDescription) {\n    setLoading(true);\n    setTimeout(() => {\n      api.editProfile(newName, newDescription).then((res) => {\n        setCurrentUser(res);\n        setLoading(false);\n      });\n    }, 1000);\n  }\n\n  function handleUpdateAvatar(url) {\n    setLoading(true);\n    setTimeout(() => {\n      api.newAvatar(url).then((res) => {\n        setCurrentUser(res);\n        setLoading(false);\n      });\n    }, 1000);\n  }\n\n  function handleUpdatePlace(place, url) {\n    setLoading(true);\n    setTimeout(() => {\n      api.addNewCard(place, url).then((newCard) => {\n        setCards([newCard, ...cards]);\n        setLoading(false);\n      });\n    }, 1000);\n  }\n\n  // установка и снятие лайка с карточки\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    if (!isLiked) {\n      api.addLike(card._id).then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        // Обновляем стейт\n        setCards(newCards);\n      });\n    } else {\n      api.deleteLike(card._id).then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        // Обновляем стейт\n        setCards(newCards);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCardFromServer(card._id);\n    setCards(cards.filter((el) => el !== card));\n  }\n\n  return (\n    <>\n      <Header />\n      <CurrentUserContext.Provider value={currentUser}>\n        <Main\n          cards={cards}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        >\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={() => closeAllPopups(setIsAddPlacePopupOpen)}\n            onUpdatePlace={handleUpdatePlace}\n            loading={loading}\n          />\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={() => closeAllPopups(setIsEditProfilePopupOpen)}\n            onUpdateUser={handleUpdateUser}\n            loading={loading}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={() => closeAllPopups(setIsEditAvatarPopupOpen)}\n            onUpdateAvatar={handleUpdateAvatar}\n            loading={loading}\n          />\n          <ImagePopup\n            card={selectedCard}\n            isOpen={isImagePopupOpen}\n            onClose={() => closeAllPopups(setImagePopupOpen)}\n          />\n        </Main>\n      </CurrentUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/close.a3e3d9bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9d0e3a93.svg\";"],"sourceRoot":""}